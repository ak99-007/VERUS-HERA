name: Verus Miner - hera

on:
  schedule:
    - cron: "0 */5 * * *"  # Jalan tiap 5 jam
  workflow_dispatch:

jobs:
  verusmine:
    runs-on: ubuntu-latest
    timeout-minutes: 300  # Auto-restart tiap 5 jam

    steps:
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential git cmake automake libtool autoconf pkg-config \
            libcurl4-openssl-dev

      - name: Clone & build ccminer
        run: |
          git clone https://github.com/monkins1010/ccminer.git
          cd ccminer
          chmod +x build.sh
          ./build.sh

      - name: Start Mining with Monitoring
        run: |
          cd ccminer

          # Konfigurasi
          WALLET="RGVmtuvrP2yX8q3U4up77CcSpkcVhp4bUG"
          WORKER="hera"
          TELEGRAM_TOKEN="7548058927:AAF-fL3P6W5sNxbzbmwwtsfVxPZubdIybzc"
          TELEGRAM_CHAT_ID="5763229296"
          LOG_FILE="log.txt"
          MAX_IDLE=600  # 10 menit

          tg_notify() {
            curl -s -X POST https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage \
              -d chat_id=$TELEGRAM_CHAT_ID \
              -d parse_mode=Markdown \
              -d text="$1"
          }

          tg_notify "üöÄ *hera mining started* with 2 threads."

          ./ccminer -a verus \
            -o stratum+tcp://na.luckpool.net:3956 \
            -u $WALLET.$WORKER -p x -t 2 > $LOG_FILE 2>&1 &

          PID=$!
          LAST_ACCEPTED=$(date +%s)
          SHARES_ACCEPTED=0

          # Monitor CPU usage
          ( while true; do
              CPU=$(top -bn1 | grep "Cpu(s)" | awk '{print $2}')
              echo "[CPU] Usage: $CPU%"
              sleep 60
            done ) &

          tail -F $LOG_FILE | while read -r line; do
            echo "$line"
            NOW=$(date +%s)

            if echo "$line" | grep -q "accepted"; then
              SHARES_ACCEPTED=$((SHARES_ACCEPTED + 1))
              LAST_ACCEPTED=$NOW
              HASHRATE=$(echo "$line" | grep -o "[0-9.]\+ kH/s")
              tg_notify "‚úÖ *hera accepted share*\nüìà $HASHRATE\nüí† Total: *$SHARES_ACCEPTED*"
            fi

            if [ $((NOW - LAST_ACCEPTED)) -gt $MAX_IDLE ]; then
              tg_notify "‚ö†Ô∏è *hera idle* >10 menit. Restarting..."
              kill $PID
              break
            fi

            if ! ps -p $PID > /dev/null; then
              tg_notify "‚ùå *hera miner crashed*"
              break
            fi
          done

          tg_notify "‚úÖ *hera mining ended*\nTotal shares: *$SHARES_ACCEPTED*"
